// Code generated by goctl. DO NOT EDIT.
// Source: api.proto

package keymanagerclient

import (
	"context"

	"st-key-manager/keymanager"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetKeyReply   = keymanager.GetKeyReply
	GetKeyRequest = keymanager.GetKeyRequest

	Keymanager interface {
		GetKey(ctx context.Context, in *GetKeyRequest, opts ...grpc.CallOption) (*GetKeyReply, error)
	}

	defaultKeymanager struct {
		cli zrpc.Client
	}
)

func NewKeymanager(cli zrpc.Client) Keymanager {
	return &defaultKeymanager{
		cli: cli,
	}
}

func (m *defaultKeymanager) GetKey(ctx context.Context, in *GetKeyRequest, opts ...grpc.CallOption) (*GetKeyReply, error) {
	client := keymanager.NewKeymanagerClient(m.cli.Conn())
	return client.GetKey(ctx, in, opts...)
}
